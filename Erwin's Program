welcome = "Welcome to Circuit Phones' Profit Calculator!"
print(welcome)

daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
methods = ['0', '1', '2', '3', '4']
categories = ['0', '1', '2', '3', '4', '5']

while welcome:
    day = 0
    amountSold = int(0)
    message = "You can calculate the profit of the company according to a specific day or by a week or divide the week into weekdays and weekend."
    choiceOfDays = "Enter a specific day [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]\n"
    print(message)
    pickMethod = input("Enter:\n1 - For specific day\n2 - For the Week\n3 - For Week Business Days\n4 - For Weekend Days\n0 - Exit\n")

    if pickMethod == methods[0]:
        print("Program End")
        break
    
    if pickMethod not in methods:
        print("INVALID INPUT: Please enter a valid input")
        continue

    while message:

        periodOfTime = day
        goodMsg = f"You did well this {periodOfTime}! Keep up the great work!"

        if pickMethod == methods[2] and day == daysOfWeek[6] and amountSold >= 10000:
            print(f"Total profit for the week is: ${amountSold:.2f}\n" + "You did good this week!")
            day = 0
            break
        if pickMethod == methods[3] and day == daysOfWeek[4] and amountSold >= 10000:
            print(f"Total profit for the week is (business days): ${amountSold:.2f}\n" + "You did good this week (business days)!")
            day = 0
            break
        if pickMethod == methods[4] and day == daysOfWeek[6] and amountSold >= 10000:
            print(f"Total profit for the weekend is: ${amountSold:.2f}\n" + "You did good this weekend!")
            day = 0
            break

        if pickMethod == methods[2] and day == daysOfWeek[6] and amountSold < 10000:
            print(f"Total profit for the week is: ${amountSold:.2f}\n" + "You did good this week!")
            day = 0
            break
        if pickMethod == methods[3] and day == daysOfWeek[4] and amountSold < 10000:
            print(f"Total profit for the week is (business days): ${amountSold:.2f}\n" + "You did good this week (business days)!")
            day = 0
            break
        if pickMethod == methods[4] and day == daysOfWeek[6] and amountSold < 10000:
            print(f"Total profit for the weekend is: ${amountSold:.2f}\n" + "You did good this weekend!")
            day = 0
            break
        if pickMethod == methods[1] and day == 0:
            days = input(choiceOfDays)
            first = days[0]
            rest = days[1:]
            day = first.upper() + rest.lower()
            if day not in daysOfWeek:
                print("INVALID INPUT: Please enter a valid input")
                break
            if day in daysOfWeek:
                print("For", day)
                continue

        #loop for printing the days in a week
        while pickMethod == methods[2] or pickMethod == methods[3] or pickMethod == methods[4]:
            if (day == 0 and pickMethod == methods[2]) or (day == 0 and pickMethod == methods[3]):
                day = daysOfWeek[0]
                print("For",day)
                break
            if day == daysOfWeek[0]:
                day = daysOfWeek[1]
                print("For",day)
                break
            if day == daysOfWeek[1]:
                day = daysOfWeek[2]
                print("For",day)
                break
            if day == daysOfWeek[2]:
                day = daysOfWeek[3]
                print("For",day)
                break
            if day == daysOfWeek[3]:
                day = daysOfWeek[4]
                print("For",day)
                break
            if (day == daysOfWeek[4]) or (day == 0 and pickMethod == methods[4]):
                day = daysOfWeek[5]
                print("For",day)
                break
            if day == daysOfWeek[5]:
                day = daysOfWeek[6]
                print("For",day)
                break
            if day == daysOfWeek[6]:
                day = 0
                break
        
        #category must be here
        category = input("Enter product number (1 - 5), or enter 0 to stop:\n")

        if category not in categories:
            print("INVALID INPUT: Please enter a valid number")
            continue

        #calculator:
        if category in categories:

            if pickMethod == methods[1] and amountSold >= 10000 and category == "0":
                print(f"Total profit for the {periodOfTime} is: ${amountSold:.2f}\n" + goodMsg)
                day = 0
                break
            if pickMethod == methods[1] and  0 != amountSold < 10000 and category == "0":
                badMsg = f"More hard work needed...The last {periodOfTime} wasn't the best"
                print(f"Total profit for the {periodOfTime} is: ${amountSold:.2f}\n" + badMsg)
                day = 0
                break

            if pickMethod == methods[2] and category == "0":
                continue
            if pickMethod == methods[3] and category == "0":
                continue
            if pickMethod == methods[4] and category == "0":
                continue

            quantity = float(input("Enter quantity sold:\n"))
            
            catCalcs1 = float(120.45 * quantity)
            catCalcs2 = float(99.50 * quantity)
            catCalcs3 = float(75.69 * quantity)
            catCalcs4 = float(65.73 * quantity)
            catCalcs5 = float(51.49 * quantity)

            if pickMethod == methods[1] and category in categories == "0":
                continue

            if category == "1":
                amountSold += catCalcs1
                
            if category == "2":
                amountSold += catCalcs2
                
            if category == "3":
                amountSold += catCalcs3
                
            if category == "4":
                amountSold += catCalcs4
                
            if category == "5":
                amountSold += catCalcs5
                
        else:
            print("INVALID INPUT: Please enter a valid input")
            continue